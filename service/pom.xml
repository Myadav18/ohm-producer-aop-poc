<?xml version="1.0" encoding="UTF-8"?>
<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>net.apmoller.crb.ohm.microservices.producer.library</groupId>
    <artifactId>parent</artifactId>
    <version>2.0.2</version>
  </parent>
  <artifactId>producer-library-service</artifactId>
  <version>2.0.2</version>
  <name>Online producer-library-service Service - Service</name>
  <description>producer-library-service service as a microservice for online</description>
  <properties>
    <artifactName>producer-library-service</artifactName>
    <com.spotify.version>1.4.9</com.spotify.version>
    <sonar.coverage.exclusions>
      **/net/apmoller/crb/ohm/microservices/producer/library/KafkaproducerApplication.java,
      **/net/apmoller/crb/ohm/microservices/producer/library/config/*,
      **/net/apmoller/crb/ohm/microservices/producer/library/models/*,
      **/net/apmoller/crb/ohm/microservices/producer/library/domains/*,
      **/net/apmoller/crb/ohm/microservices/producer/library/constants/*,
      **/net/apmoller/crb/ohm/microservices/producer/library/exceptions/*,
      **/net/apmoller/crb/ohm/microservices/producer/library/services/ClaimsCheckService.*,
      **/net/apmoller/crb/ohm/microservices/producer/library/services/ClaimsCheckServiceImpl.*,
      **/net/apmoller/crb/ohm/microservices/producer/library/storage/*,
      **/net/apmoller/crb/ohm/microservices/producer/library/util/CompressionUtil.java*,
      **net/apmoller/ohm/adapter/avro/model/*
    </sonar.coverage.exclusions>
    </properties>
    <dependencies>
      <dependency>
        <groupId>org.springframework.kafka</groupId>
        <artifactId>spring-kafka</artifactId>
        <version>2.8.5</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-actuator</artifactId>
      </dependency>
      <dependency>
        <groupId>io.micrometer</groupId>
        <artifactId>micrometer-registry-prometheus</artifactId>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>net.apmoller.crb.ohm.microservices</groupId>
        <artifactId>ohm-exception-handler-utility</artifactId>
        <version>2.0.2</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-aop</artifactId>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.confluent</groupId>
        <artifactId>kafka-avro-serializer</artifactId>
        <version>6.2.1</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.kafka</groupId>
        <artifactId>spring-kafka-test</artifactId>
        <scope>test</scope>
      </dependency>

      <!--<dependency>
        <groupId>com.azure.spring</groupId>
        <artifactId>spring-cloud-azure-starter-storage-blob</artifactId>
        <version>4.2.0</version>
      </dependency>
      <dependency>
        <groupId>com.azure.spring</groupId>
        <artifactId>azure-spring-boot-starter-storage</artifactId>
        <version>3.13.0</version>
      </dependency>-->
    </dependencies>

  <build>
    <finalName>${artifactName}</finalName>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <id>repackage</id>
            <goals>
              <goal>repackage</goal>
            </goals>
            <configuration>
              <classifier>exec</classifier>
            </configuration>
          </execution>
        </executions>
      </plugin>
            <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.4</version>
        <configuration>
          <excludes>
            <exclude>**/net/apmoller/crb/ohm/microservices/producer/library/KafkaproducerApplication.*</exclude>
            <exclude>**/net/apmoller/crb/ohm/microservices/producer/library/models/*</exclude>
            <exclude>**/net/apmoller/crb/ohm/microservices/producer/library/config/*</exclude>
            <exclude>**/net/apmoller/crb/ohm/microservices/producer/library/constants/*</exclude>
            <exclude>**/net/apmoller/crb/ohm/microservices/producer/library/storage/*</exclude>
            <exclude>**/net/apmoller/crb/ohm/microservices/producer/library/exceptions/*</exclude>
            <exclude>**/net/apmoller/crb/ohm/microservices/producer/library/services/ClaimsCheckService.*</exclude>
            <exclude>**/net/apmoller/crb/ohm/microservices/producer/library/services/ClaimsCheckServiceImpl.*</exclude>
            <exclude>**net/apmoller/ohm/adapter/avro/model/*</exclude>
          </excludes>
          <destFile>${basedir}/target/site/jacoco/jacoco.exec</destFile>
          <dataFile>${basedir}/target/site/jacoco/jacoco.exec</dataFile>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-plugin</artifactId>
        <version>${com.spotify.version}</version>
        <configuration>
          <repository>ohm/${project.artifactId}</repository>
          <tag>${project.version}</tag>
          <buildArgs>
            <JAR_FILE>target/${artifactName}</JAR_FILE>
          </buildArgs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro-maven-plugin</artifactId>
        <version>1.8.2</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>schema</goal>
            </goals>
            <configuration>
              <sourceDirectory>src/main/avro</sourceDirectory>
              <outputDirectory>${project.build.directory}/generated-sources</outputDirectory>
              <stringType>String</stringType>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
